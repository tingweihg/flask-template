version: '3.7'

networks:
  app_net:
    driver: bridge
    ipam:
      config:
        - subnet: 170.100.0.0/24
          gateway: 170.100.0.1

services:
  flask_app:
    container_name: flask_app
    image: ${APP_NAME}-flask_app:${APP_VERSION}
    restart: unless-stopped
    build: 
      context: .
      dockerfile: /deploy/Dockerfile.flask_app
    ports:
      - 5000:5000
    networks:
      app_net:
        ipv4_address: 170.100.0.5
    working_dir: /home/flask_app
    command: gunicorn -w 4 -b 0.0.0.0:5000 wsgi:application
    depends_on:
      - database
      - migration
    volumes:
      - app_data:/home
    environment:
      - FLASK_APP=/home/flask_app/wsgi:application
      - FLASK_APP_LOG_DIR=/home/flask_app/logs
      - SECRET_KEY=${APP_NAME}-flask-app-secret-key
      - SQLALCHEMY_DATABASE_URI=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}

  migration:
    container_name: migration
    image: ${APP_NAME}-flask_app:${APP_VERSION}
    command: ["/bin/sh", "-c", "flask db init;flask db migrate -m 'init';flask db upgrade;"]
    depends_on:
      - database
    networks:
      app_net:
        ipv4_address: 170.100.0.51
    volumes:
      - app_data:/home
    environment:
      - SQLALCHEMY_DATABASE_URI=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}

  database:
    container_name: postgres
    image: ${APP_NAME}-postres
    build:
      context: .
      dockerfile: deploy/Dockerfile.postgres
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - 5432:5432
    networks:
      app_net:
        ipv4_address: 170.100.0.6
    volumes:
      - postgres_data:/var/lib/postgresql/data

  proxy:
    container_name: proxy
    image: ${APP_NAME}-nginx
    build:
      context: .
      dockerfile: nginx/Dockerfile
    restart: always
    depends_on:
      - flask_app
    networks:
      app_net:
        ipv4_address: 170.100.0.7
    ports:
      - 80:80
      - 443:443
    volumes:
      - nginx_data:/etc/nginx
      - nginx_cert_data:/etc/nginx/cert

  pgadmin:
    container_name: pgadmin
    image: ${APP_NAME}-pgadmin   
    build:
      context: .
      dockerfile: deploy/Dockerfile.pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "5050:80"
    networks:
      app_net:
        ipv4_address: 170.100.0.9
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - database
    links:
      - database
      - proxy

volumes:
  postgres_data:
  pgadmin_data:
  app_data:
  nginx_data:
  nginx_cert_data: